package com.openbravo.pos.mant;

import java.awt.Component;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

import com.openbravo.basic.BasicException;
import com.openbravo.data.user.DirtyManager;
import com.openbravo.data.user.EditorRecord;
import com.openbravo.format.Formats;
import com.openbravo.pos.forms.DataLogicSales;

import static javax.swing.JOptionPane.showMessageDialog;

/**
 *
 * @author marembo (marembo2008@gmail.com)
 */
public class TableArrangementsEditor extends javax.swing.JPanel implements EditorRecord {

    private static final long serialVersionUID = -4908368118389092445L;

    private static final Logger LOGGER = Logger.getLogger(TableArrangementsEditor.class.getName());

    /**
     * Creates new form TableArrangementsEditor
     */
    public TableArrangementsEditor(final DataLogicSales dataLogicSales, final DirtyManager dirtyManager) {
        initComponents();

        arrangementNameField.getDocument().addDocumentListener(dirtyManager);
        arrangementWidthField.getDocument().addDocumentListener(dirtyManager);
        arrangementLengthField.getDocument().addDocumentListener(dirtyManager);

        setDefaultIcon();
    }

    @Override
    public void writeValueEOF() {
    }

    @Override
    public void writeValueInsert() {
        this.id = UUID.randomUUID().toString();
        this.arrangementNameField.setText(null);
        this.arrangementWidthField.setText(null);
        this.arrangementLengthField.setText(null);
        this.arrangementIconPanel.setIcon(null);

        setDefaultIcon();
    }

    @Override
    public void writeValueEdit(final Object value) {
        final Object[] arrangement = (Object[]) value;
        this.id = Formats.STRING.formatValue(arrangement[0]);
        this.arrangementNameField.setText(Formats.STRING.formatValue(arrangement[1]));
        this.arrangementWidthField.setText(Formats.INT.formatValue(arrangement[2]));
        this.arrangementLengthField.setText(Formats.INT.formatValue(arrangement[3]));
        this.iconImage = (BufferedImage) arrangement[4];
        setScaledImage(iconImage);
    }

    @Override
    public void writeValueDelete(Object value) {
    }

    @Override
    public void refresh() {
    }

    @Override
    public Component getComponent() {
        return this;
    }

    @Override
    public Object createValue() throws BasicException {
        return new Object[]{id == null ? (id = UUID.randomUUID().toString()) : id,
                            arrangementNameField.getText(),
                            Formats.INT.parseValue(arrangementWidthField.getText()),
                            Formats.INT.parseValue(arrangementLengthField.getText()),
                            iconImage};
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        arrangementFieldLabel = new javax.swing.JLabel();
        arrangementNameField = new javax.swing.JTextField();
        arrangmentWidthLabel = new javax.swing.JLabel();
        arrangementWidthField = new javax.swing.JTextField();
        arrangementSizeExplanationLabel = new javax.swing.JLabel();
        arrangementIconPanel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        arrangmentDesignUploadBtn = new javax.swing.JButton();
        arrangementLengthField = new javax.swing.JTextField();
        arrangmentLengthLabel = new javax.swing.JLabel();

        arrangementFieldLabel.setText("Arrangement Name");

        arrangmentWidthLabel.setText("Arrangement Width");

        arrangementSizeExplanationLabel.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        arrangementSizeExplanationLabel.setForeground(new java.awt.Color(110, 100, 100));
        arrangementSizeExplanationLabel.setText("<html>Arrangement Size, is the size of the table arrangement relative to the size of the restaurant floor, in percentage.</html>");

        arrangementIconPanel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        arrangementIconPanel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/openbravo/images/tableplaces/1RT4C.png"))); // NOI18N
        arrangementIconPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(146, 141, 141)));

        arrangmentDesignUploadBtn.setText("Upload Design");
        arrangmentDesignUploadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arrangmentDesignUploadBtnActionPerformed(evt);
            }
        });

        arrangmentLengthLabel.setText("Arrangement Length");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(arrangementIconPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(arrangementFieldLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(arrangmentWidthLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(arrangmentLengthLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(53, 53, 53)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(arrangementNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(arrangementWidthField, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(arrangementLengthField, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(arrangementSizeExplanationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(jSeparator1))
                    .addComponent(arrangmentDesignUploadBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(arrangementFieldLabel)
                    .addComponent(arrangementNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(arrangmentWidthLabel)
                    .addComponent(arrangementWidthField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(arrangmentLengthLabel)
                    .addComponent(arrangementLengthField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(arrangementSizeExplanationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(arrangementIconPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(arrangmentDesignUploadBtn)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void arrangmentDesignUploadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arrangmentDesignUploadBtnActionPerformed
        final JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);

        final File selectedFile = chooser.getSelectedFile();
        if (selectedFile == null) {
            return;
        }

        if (arrangementNameField.getText() == null) {
            arrangementNameField.setText(selectedFile.getName());
        }

        try {
            setIcon(new FileInputStream(selectedFile));
        } catch (final FileNotFoundException ex) {
            showMessageDialog(this, ex.getMessage(), "No File Found", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_arrangmentDesignUploadBtnActionPerformed

    private void setDefaultIcon() {
        setIcon(getClass().getResourceAsStream("/com/openbravo/images/tableplaces/1RT4C.png"));
    }

    private void setIcon(final InputStream inputStream) {
        if (inputStream == null) {
            return;
        }

        try {
            this.iconImage = ImageIO.read(inputStream);
            if (this.iconImage == null) {
                showMessageDialog(this, "Could not read image", "Error loading image", JOptionPane.ERROR_MESSAGE);
            }
            setScaledImage(iconImage);
        } catch (final IOException ex) {
            LOGGER.log(Level.SEVERE, "Error loading default icon.", ex);
        }

    }

    private void setScaledImage(final BufferedImage image) {
        final Image scaledImage = image.getScaledInstance(200, 180, Image.SCALE_SMOOTH);

        //Set the image icon
        final ImageIcon icon = new ImageIcon(scaledImage);
        arrangementIconPanel.setIcon(icon);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel arrangementFieldLabel;
    private javax.swing.JLabel arrangementIconPanel;
    private javax.swing.JTextField arrangementLengthField;
    private javax.swing.JTextField arrangementNameField;
    private javax.swing.JLabel arrangementSizeExplanationLabel;
    private javax.swing.JTextField arrangementWidthField;
    private javax.swing.JButton arrangmentDesignUploadBtn;
    private javax.swing.JLabel arrangmentLengthLabel;
    private javax.swing.JLabel arrangmentWidthLabel;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables

    private BufferedImage iconImage;

    private String id;

}
