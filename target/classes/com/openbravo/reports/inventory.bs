//    uniCenta oPOS - Touch Friendly Point Of Sale
//    Copyright (c) 2009-2017 uniCenta & previous Openbravo POS works
//    https://unicenta.com
//
//    This file is part of uniCenta oPOS
//
//    uniCenta oPOS is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    uniCenta oPOS is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with uniCenta oPOS.  If not, see <http://www.gnu.org/licenses/>.

report = new com.openbravo.pos.reports.PanelReportBean();

report.setTitleKey("Menu.Inventory");
report.setReport("/com/openbravo/reports/inventory");
report.setResourceBundle("com/openbravo/reports/inventory_messages");

report.setSentence("SELECT " +
                "stockcurrent.LOCATION AS LOCATIONID, " +
                "locations.NAME AS LOCATIONNAME, " +
                "products.REFERENCE, " +
                "products.NAME AS PRODUCTNAME, " +
                "astock.NAME AS STOCK_NAME, " +
                "products.CATEGORY, " +
                "categories.NAME AS CATEGORYNAME, " +
                "CASE WHEN astock.id IS NOT NULL AND COALESCE(astock.countable, FALSE) THEN astock.quantity ELSE stockcurrent.UNITS END AS UNITS, " +
                "products.PRICEBUY, " +
                "CASE WHEN (astock.id IS NOT NULL AND COALESCE(astock.countable, FALSE)) THEN astock.price ELSE products.PRICESELL END AS PRICESELL, " +
                "COALESCE(products.STOCKVOLUME, 0) AS STOCKVOLUME, " +
                "COALESCE(products.STOCKCOST, 0) AS STOCKCOST, " +
                "CASE WHEN (astock.id IS NOT NULL AND COALESCE(astock.countable, FALSE)) THEN COALESCE(astock.min_qty, 0) ELSE COALESCE(stocklevel.STOCKSECURITY, 0)  END AS STOCKSECURITY, " +
                "CASE WHEN (astock.id IS NOT NULL AND COALESCE(astock.countable, FALSE)) THEN COALESCE(astock.max_qty, 0) ELSE COALESCE(stocklevel.STOCKMAXIMUM, 0) END AS STOCKMAXIMUM " +
                "FROM stockcurrent " +
                    "JOIN locations ON stockcurrent.LOCATION = locations.ID " +
                    "JOIN products ON stockcurrent.PRODUCT = products.ID " +
                    "JOIN categories ON products.CATEGORY = categories.ID " +
                    "LEFT OUTER JOIN stocklevel ON stockcurrent.LOCATION = " +
                        "stocklevel.LOCATION AND stockcurrent.PRODUCT = stocklevel.PRODUCT " +
                    "LEFT OUTER JOIN attributed_stock astock ON astock.product_id = products.id " +
                "WHERE ?(QBF_FILTER) " +
                "GROUP BY stockcurrent.LOCATION, locations.NAME, products.REFERENCE, " +
                    "products.NAME, STOCK_NAME, astock.countable, products.CATEGORY, categories.NAME, products.PRICEBUY, " +
                    "products.PRICESELL, products.STOCKVOLUME, astock.id, astock.quantity, astock.order_qty, astock.min_qty, astock.max_qty, astock.price, products.STOCKCOST, " +
                    "stocklevel.STOCKSECURITY, stocklevel.STOCKMAXIMUM,stockcurrent.units " +
                "ORDER BY stockcurrent.LOCATION, categories.NAME, products.NAME");

report.addParameter("products.NAME");
report.addParameter("products.PRICEBUY");
report.addParameter("products.PRICESELL");
report.addParameter("products.CATEGORY");
report.addParameter("products.CODE");
report.addQBFFilter(new com.openbravo.pos.ticket.ProductFilter());

report.addParameter("stockcurrent.LOCATION");
report.addQBFFilter(new com.openbravo.pos.reports.JParamsLocationWithFirst());

report.addField("LOCATIONID", com.openbravo.data.loader.Datas.STRING);
report.addField("LOCATIONNAME", com.openbravo.data.loader.Datas.STRING);
report.addField("REFERENCE", com.openbravo.data.loader.Datas.STRING);
report.addField("NAME", com.openbravo.data.loader.Datas.STRING);
report.addField("STOCK_NAME", com.openbravo.data.loader.Datas.STRING);
report.addField("CATEGORY", com.openbravo.data.loader.Datas.STRING);
report.addField("CATEGORYNAME", com.openbravo.data.loader.Datas.STRING);
report.addField("UNITS", com.openbravo.data.loader.Datas.DOUBLE);
report.addField("PRICEBUY", com.openbravo.data.loader.Datas.DOUBLE);
report.addField("PRICESELL", com.openbravo.data.loader.Datas.DOUBLE);
report.addField("STOCKVOLUME", com.openbravo.data.loader.Datas.DOUBLE);
report.addField("STOCKCOST", com.openbravo.data.loader.Datas.DOUBLE);
report.addField("STOCKSECURITY", com.openbravo.data.loader.Datas.DOUBLE);
report.addField("STOCKMAXIMUM", com.openbravo.data.loader.Datas.DOUBLE);

report;